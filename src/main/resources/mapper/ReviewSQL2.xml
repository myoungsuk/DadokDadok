<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.multi.mini6.reviewboard.dao.ReviewDAO">
	<!-- 전체 페이지개수 계산할 때 전체 게시물 개수가 필요함 -->

	<insert id="reviewInsert" parameterType="reviewVO" useGeneratedKeys="true" keyProperty="review_id">

		INSERT INTO review
		(member_id,
		book_isbn, review_title,
		review_content,
		review_createdAt, review_updatedAt)
		VALUES
		(#{member_id}, #{book_isbn},
		#{review_title},
		#{review_content},
		DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'));
	</insert>




	<update id="reviewUpdate" parameterType="reviewVO">
		update review set review_title
		= #{review_title}, review_content = #{review_content} where review_id
		= #{review_id}
	</update>

	<delete id="reviewDelete" parameterType="int">
		delete from review where review_id = #{review_id}
	</delete>

	<select id="getReviewOne" parameterType="reviewVO" resultType="reviewVO">
		select * from review where review_id = #{review_id}
	</select>

	<select id="reviewCount" resultType="int"> <!-- ==> PAGEDAO랑 연결됨 -->
		select count(*) from review
	</select>
	<select id="searchCount"  parameterType="reviewVO" resultType="int"> <!-- ==> PAGEDAO랑 연결됨 -->
		select count(*) from review
		<if test="keyword != null">
			WHERE review_title LIKE CONCAT('%', #{keyword}, '%')
		</if>
	</select>

	<select id="reviewList" parameterType="pageVO2" resultType="reviewVO">
		select *
		from
		(select
		ROW_NUMBER() over(order by review_id desc) as review_no, review_id,
		member_id, review_title, review_content, review_createdAt,review_updatedAt,
		review_views
		from review r) r2
		where r2.review_no BETWEEN #{start} and #{end}

	</select>
	<select id="reviewSearch" parameterType="pageVO2" resultType="reviewVO">

		select *
		from
		(select
		ROW_NUMBER() over(order by review_id desc) as review_no, review_id,
		member_id, review_title, review_content, review_createdAt,review_updatedAt,
		review_views
		from review r
		WHERE review_title LIKE CONCAT('%', #{keyword},'%')
		) r2
		where r2.review_no BETWEEN #{start} and #{end}

	</select>

	<update id="increaseViews" parameterType="int">
		UPDATE review
		SET review_views = review_views + 1
		WHERE review_id = #{reviewId}
	</update>

	<!-- Get current views for a review -->
	<select id="getReviewViews" parameterType="reviewVO" resultType="reviewVO">
		SELECT review_views
		FROM review
		WHERE review_id = #{reviewId}
	</select>
	<insert id="attachInsert" parameterType="reviewattachVO">

		INSERT INTO review_attach
		(review_id,
		review_uuid, review_file_name, review_file_type)
		VALUES
		(#{review_id}, #{review_uuid},
		#{review_file_name},#{review_file_type})

	</insert>

	<!--자유게시판 글 등록 - 첨부파일 삭제 -->
	<delete id="reviewFileDelete" parameterType="int">
		delete from review_attach where review_id = #{review_id}
	</delete>

	<!--자유게시판 글 등록 - 첨부파일 번호 찾기-->
	<select id="reviewFileID" resultType="reviewattachVO">
		select * from review_attach where review_id = #{review_id}
	</select>

	<!--자유게시판 글 수정 - 첨부파일 삭제 -->
	<delete id="reviewFileChange" parameterType="String">
		delete from review_attach where review_uuid = #{review_uuid}
	</delete>


	<resultMap type="reviewVO" id="reviewVO">
		<result column="review_id" property="review_id"/>
		<result column="member_id" property="member_id"/>
		<result column="book_isbn" property="book_isbn"/>
		<result column="review_title" property="review_title"/>
		<result column="review_content" property="review_content"/>
		<result column="review_createdAt" property="review_createdAt"/>
		<result column="review_updatedAt" property="review_updatedAt"/>
		<result column="review_views" property="review_views"/>
		<collection property="review_attach" resultMap="reviewattach" />
	</resultMap>

	<resultMap type="reviewattachVO" id="reviewattach">
		<result column="review_attach_id" property="review_attach_id"/>
		<result column="review_uuid" property="review_uuid"/>
		<result column="review_file_name" property="review_file_name"/>
		<result column="review_file_type" property="review_file_type"/>

	</resultMap>

	<select id="selectReviewAttach" parameterType="pageVO2" resultMap="reviewVO">
		SELECT *
		FROM (
		SELECT
		ROW_NUMBER() OVER (ORDER BY r.review_id DESC) AS review_no,
		r.review_id,
		member_id,
		review_title,
		review_content,
		review_createdAt,
		review_updatedAt,
		review_views,
		ra.review_attach_id,
		ra.review_uuid,
		ra.review_file_name,
		ra.review_file_type
		FROM review r
		LEFT JOIN review_attach ra ON r.review_id = ra.review_id
		<if test="keyword != null">
			WHERE review_title LIKE CONCAT('%', #{keyword}, '%')
		</if>
		) r2
		WHERE r2.review_no BETWEEN #{start} AND #{end}
	</select>


	<select id="selectReviewAttach1" parameterType="String" resultMap="reviewVO">
		select
		r.review_id,
		r.member_id,
		r.book_isbn,
		r.review_title,
		r.review_content,
		r.review_createdAt,
		r.review_updatedAt,
		r.review_views,
		ra.review_attach_id,
		ra.review_uuid,
		ra.review_file_name,
		ra.review_file_type
		from review r
		inner join review_attach ra on r.review_id = ra.review_id
		where r.review_id = #{review_id}
	</select>



	<select id="freeBoardFileID" resultType="reviewattachVO">
		select * from review_attach where review_id = #{review_id}
	</select>
	<!--  자유게시판 글 상세보기 -->
	<select id="reviewBoardOne" parameterType="reviewVO" resultType="reviewVO">
		SELECT r.*, m.nickname
		FROM review r
		LEFT JOIN member m ON r.member_id = m.member_id
		WHERE r.review_id = #{review_id}
	</select>

</mapper>

