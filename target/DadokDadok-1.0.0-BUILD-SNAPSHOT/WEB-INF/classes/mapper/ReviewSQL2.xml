<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.multi.mini6.reviewboard.dao.ReviewDAO">
	<!-- 전체 페이지개수 계산할 때 전체 게시물 개수가 필요함 -->

	<insert id="reviewInsert" parameterType="reviewVO">

		INSERT INTO review
		(member_id,
		book_isbn, review_title,
		review_content,
		review_createdAt, review_updatedAt)
		VALUES
		(#{member_id}, #{book_isbn},
		#{review_title},
		#{review_content}, now(),now())
	</insert>




	<update id="reviewupdate" parameterType="reviewVO">
		update review set review_title
		= #{review_title}, review_content = #{review_content} where review_id
		= #{review_id}
	</update>

	<delete id="delete" parameterType="reviewVO">
		delete from review where review_id = #{review_id}
	</delete>

	<select id="getReviewOne" parameterType="reviewVO" resultType="reviewVO">
		select * from review where review_id = #{review_id}
	</select>

	<select id="reviewcount" resultType="int"> <!-- ==> PAGEDAO랑 연결됨 -->
		select count(*) from review
	</select>
	<select id="searchCount"  parameterType="reviewVO" resultType="int"> <!-- ==> PAGEDAO랑 연결됨 -->
		select count(*) from review
		WHERE review_title LIKE CONCAT('%', #{keyword},'%')
	</select>

	<select id="reviewlist" parameterType="pageVO2" resultType="reviewVO">
		select *
		from
		(select
		ROW_NUMBER() over(order by review_id desc) as review_no, review_id,
		member_id, review_title, review_content, review_createdAt,review_updatedAt,
		review_views
		from review r) r2
		where r2.review_no BETWEEN #{start} and #{end}
		order by review_createdAt desc

	</select>
	<select id="search" parameterType="pageVO2" resultType="reviewVO">

		select *
		from
		(select
		ROW_NUMBER() over(order by review_id desc) as review_no, review_id,
		member_id, review_title, review_content, review_createdAt,review_updatedAt,
		review_views
		from review r
		WHERE review_title LIKE CONCAT('%', #{keyword},'%')
		) r2
		where r2.review_no BETWEEN #{start} and #{end}

	</select>

	<update id="increaseViews" parameterType="int">
		UPDATE review
		SET review_views = review_views + 1
		WHERE review_id = #{reviewId}
	</update>

	<!-- Get current views for a review -->
	<select id="getReviewViews" parameterType="reviewVO" resultType="reviewVO">
		SELECT review_views
		FROM review
		WHERE review_id = #{reviewId}
	</select>
	<insert id="attachInsert" parameterType="reviewattachVO">

		INSERT INTO review_attach
		(review_id,
		review_uuid, review_file_name)
		VALUES
		(#{review_id}, #{review_uuid},
		#{review_file_name})

	</insert>
	<!--자유게시판 글 등록 - 파일첨부 -->
	<insert id="fileInsert"  parameterType="reviewattachVO">
		insert into review_attach (review_id, review_uuid, review_file_name, review_file_type)
		values(#{review_id}, #{review_uuid}, #{review_file_name}, #{review_file_type})
	</insert>
	<!--자유게시판 글 등록 - 첨부파일 삭제 -->
	<delete id="fileDelete">
		delete from review_attach where review_id = #{review_id}
	</delete>

	<!--자유게시판 글 등록 - 첨부파일 번호 찾기-->
	<select id="fileID" resultType="reviewattachVO">
		select * from review_attach where review_id = #{review_id}
	</select>

	<!--자유게시판 글 수정 - 첨부파일 삭제 -->
	<delete id="fileChange">
		delete from review_attach where review_uuid = #{review_uuid}
	</delete>
</mapper>

